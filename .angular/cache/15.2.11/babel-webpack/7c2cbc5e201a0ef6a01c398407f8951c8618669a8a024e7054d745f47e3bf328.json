{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { environment } from '@environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let PlacesService = /*#__PURE__*/(() => {\n  class PlacesService {\n    constructor(http) {\n      this.http = http;\n      this._places = new BehaviorSubject([]);\n      this.places = this._places.asObservable();\n      this.fetchPlaces();\n    }\n    get getPlaces() {\n      return this._places.value;\n    }\n    fetchPlaces() {\n      return this.http.get(`${environment.apiUrl}/api/places`).subscribe(data => {\n        console.log(\"data\" + data);\n        this._places.next(data);\n      }, error => console.log('Could not load places.'));\n    }\n    static #_ = this.ɵfac = function PlacesService_Factory(t) {\n      return new (t || PlacesService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PlacesService,\n      factory: PlacesService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return PlacesService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}